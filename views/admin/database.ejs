<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Database</title>
    <link rel="stylesheet" href="/public/css/admin/basics.css">
    <link rel="icon" type="image/png" href="/public/images/favicon.png" sizes="128x128">
    <link rel="stylesheet" href="/public/css/modal.css">
</head>
<body>
    <%- include("../partials/admin-dashboard-nav") %>
    <main>
        <%- include("../partials/admin-dashboard-header") %>
        <h1>Database</h1>
        <h2>Areas</h2>
        <table>
            <thead>
                <tr>
                    <th>Description</th>
                    <th>Total listings</th>
                    <th>Action</th>
                </tr>
            </thead>
            <tbody id="areas-table">
            </tbody>
        </table>
        <h2>Categories</h2>
        <table>
            <thead>
                <tr>
                    <th>Description</th>
                    <th>Total listings</th>
                    <th>Action</th>
                </tr>
            </thead>
            <tbody id="categories-table">
            </tbody>
        </table>
    </main>
    <script>
        //define delete area and category functions with a common confirmation modal
        function showConfirmationModal(message) {
            return new Promise(resolve => {
                // Create modal HTML
                const modalHtml = document.createElement("div");
                modalHtml.id = "confirmationModal";
                modalHtml.classList.add("modal"); // Corrected from modal.classList.add
                modalHtml.innerHTML = `
                    <div class="modal-content">
                        <p>${message}</p>
                        <button id="confirm">Yes, delete</button>
                        <button id="cancel">Cancel</button>
                    </div>`;
                
                document.querySelector("main").appendChild(modalHtml);
                const modal = document.getElementById("confirmationModal"); // Moved here
                const confirmButton = document.getElementById("confirm");
                const cancelButton = document.getElementById("cancel");
                modal.style.display = "block";
                
                confirmButton.addEventListener("click", () => {
                    modal.style.display = "none";
                    resolve(true);
                });
            
                cancelButton.addEventListener("click", () => {
                    modal.style.display = "none";
                    resolve(false);
                });
            });
        }


        async function deleteArea(description) {
        showConfirmationModal("Are you sure you want to delete this area? It will set all listings with this area to 'Other'")
        .then(async confirmed => {
            if (confirmed) {
                const response = await fetch(`/admin/api/delete-area?description=${description}`, {
                    method: 'DELETE'
                });
                window.location.reload();
            }
            });
        }
        async function deleteCategory(description) {
        showConfirmationModal("Are you sure you want to delete this category? It will set all listings with this category to 'Other'")
        .then(async confirmed => {
            if (confirmed) {
                const response = await fetch(`/admin/api/delete-category?description=${description}`, {
                    method: 'DELETE'
                });
                window.location.reload();
            }
            });
        }

        fetch("/admin/api/areas")
        .then(response => response.json()) 
        .then(async areas => {
            for (const area of areas) {
                const countResponse = await fetch(`/admin/api/count-area?description=${area.description}`);
                const countData = await countResponse.json();
                let areaRow = document.createElement("tr");
                areaRow.innerHTML = `
                    <td>${area.description}</td>
                    <td>${countData}</td>
                    <td class="delete-column"><button onclick="deleteArea('${area.description}')">delete</button></td>`;

                document.getElementById("areas-table").appendChild(areaRow);
            }
        });

        fetch("/admin/api/categories")
        .then(response => response.json()) 
        .then(async categories => {
            for (const category of categories) {
                const countResponse = await fetch(`/admin/api/count-category?description=${category.description}`);
                const countData = await countResponse.json();
                let catRow = document.createElement("tr");
                catRow.innerHTML = `
                    <td>${category.description}</td>
                    <td>${countData}</td>
                    <td class="delete-column"><button onclick="deleteCategory('${category.description}')">delete</button></td>`;

                document.getElementById("categories-table").appendChild(catRow);
            }
        });
    </script>
</body>
</html>